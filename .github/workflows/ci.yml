name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Lint code for consistent style
        run: bundle exec standardrb

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database:
          - { name: 'PostgreSQL', url: 'postgresql://postgres:postgres@localhost:5432/stepper_motor_test' }
          - { name: 'MySQL', url: 'mysql2://root:root@localhost:3306/stepper_motor_test' }
          - { name: 'SQLite', url: 'sqlite3:db/test.sqlite3' }

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stepper_motor_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: stepper_motor_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Remove existing schema.rb
        run: rm -f test/dummy/db/schema.rb

      - name: Setup database
        env:
          RAILS_ENV: test
          DATABASE_URL: ${{ matrix.database.url }}
        run: |
          cd test/dummy
          bundle exec rails db:create
          bundle exec rails db:migrate
          cd ../..

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: ${{ matrix.database.url }}
        run: bin/test

